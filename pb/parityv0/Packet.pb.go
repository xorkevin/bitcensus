// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: parity/v0/Packet.proto

package parityv0

import (
	reflect "reflect"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexPacket struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_InputFile   *InputFile             `protobuf:"bytes,1,opt,name=input_file,json=inputFile" json:"input_file,omitempty"`
	xxx_hidden_ShardConfig *ShardConfig           `protobuf:"bytes,2,opt,name=shard_config,json=shardConfig" json:"shard_config,omitempty"`
	xxx_hidden_BlockSet    *BlockSet              `protobuf:"bytes,3,opt,name=block_set,json=blockSet" json:"block_set,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *IndexPacket) Reset() {
	*x = IndexPacket{}
	mi := &file_parity_v0_Packet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexPacket) ProtoMessage() {}

func (x *IndexPacket) ProtoReflect() protoreflect.Message {
	mi := &file_parity_v0_Packet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IndexPacket) GetInputFile() *InputFile {
	if x != nil {
		return x.xxx_hidden_InputFile
	}
	return nil
}

func (x *IndexPacket) GetShardConfig() *ShardConfig {
	if x != nil {
		return x.xxx_hidden_ShardConfig
	}
	return nil
}

func (x *IndexPacket) GetBlockSet() *BlockSet {
	if x != nil {
		return x.xxx_hidden_BlockSet
	}
	return nil
}

func (x *IndexPacket) SetInputFile(v *InputFile) {
	x.xxx_hidden_InputFile = v
}

func (x *IndexPacket) SetShardConfig(v *ShardConfig) {
	x.xxx_hidden_ShardConfig = v
}

func (x *IndexPacket) SetBlockSet(v *BlockSet) {
	x.xxx_hidden_BlockSet = v
}

func (x *IndexPacket) HasInputFile() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_InputFile != nil
}

func (x *IndexPacket) HasShardConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ShardConfig != nil
}

func (x *IndexPacket) HasBlockSet() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BlockSet != nil
}

func (x *IndexPacket) ClearInputFile() {
	x.xxx_hidden_InputFile = nil
}

func (x *IndexPacket) ClearShardConfig() {
	x.xxx_hidden_ShardConfig = nil
}

func (x *IndexPacket) ClearBlockSet() {
	x.xxx_hidden_BlockSet = nil
}

type IndexPacket_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	InputFile   *InputFile
	ShardConfig *ShardConfig
	BlockSet    *BlockSet
}

func (b0 IndexPacket_builder) Build() *IndexPacket {
	m0 := &IndexPacket{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_InputFile = b.InputFile
	x.xxx_hidden_ShardConfig = b.ShardConfig
	x.xxx_hidden_BlockSet = b.BlockSet
	return m0
}

type InputFile struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Hash        []byte                 `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
	xxx_hidden_Size        uint64                 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InputFile) Reset() {
	*x = InputFile{}
	mi := &file_parity_v0_Packet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputFile) ProtoMessage() {}

func (x *InputFile) ProtoReflect() protoreflect.Message {
	mi := &file_parity_v0_Packet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InputFile) GetHash() []byte {
	if x != nil {
		return x.xxx_hidden_Hash
	}
	return nil
}

func (x *InputFile) GetSize() uint64 {
	if x != nil {
		return x.xxx_hidden_Size
	}
	return 0
}

func (x *InputFile) SetHash(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Hash = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *InputFile) SetSize(v uint64) {
	x.xxx_hidden_Size = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InputFile) HasHash() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InputFile) HasSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InputFile) ClearHash() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Hash = nil
}

func (x *InputFile) ClearSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Size = 0
}

type InputFile_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Hash []byte
	Size *uint64
}

func (b0 InputFile_builder) Build() *InputFile {
	m0 := &InputFile{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Hash != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Hash = b.Hash
	}
	if b.Size != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Size = *b.Size
	}
	return m0
}

type ShardConfig struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BlockSize        uint64                 `protobuf:"varint,1,opt,name=block_size,json=blockSize" json:"block_size,omitempty"`
	xxx_hidden_Count            uint64                 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	xxx_hidden_ParityCount      uint64                 `protobuf:"varint,3,opt,name=parity_count,json=parityCount" json:"parity_count,omitempty"`
	xxx_hidden_CodeMatrixConfig *CodeMatrixConfig      `protobuf:"bytes,4,opt,name=code_matrix_config,json=codeMatrixConfig" json:"code_matrix_config,omitempty"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ShardConfig) Reset() {
	*x = ShardConfig{}
	mi := &file_parity_v0_Packet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardConfig) ProtoMessage() {}

func (x *ShardConfig) ProtoReflect() protoreflect.Message {
	mi := &file_parity_v0_Packet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ShardConfig) GetBlockSize() uint64 {
	if x != nil {
		return x.xxx_hidden_BlockSize
	}
	return 0
}

func (x *ShardConfig) GetCount() uint64 {
	if x != nil {
		return x.xxx_hidden_Count
	}
	return 0
}

func (x *ShardConfig) GetParityCount() uint64 {
	if x != nil {
		return x.xxx_hidden_ParityCount
	}
	return 0
}

func (x *ShardConfig) GetCodeMatrixConfig() *CodeMatrixConfig {
	if x != nil {
		return x.xxx_hidden_CodeMatrixConfig
	}
	return nil
}

func (x *ShardConfig) SetBlockSize(v uint64) {
	x.xxx_hidden_BlockSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ShardConfig) SetCount(v uint64) {
	x.xxx_hidden_Count = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ShardConfig) SetParityCount(v uint64) {
	x.xxx_hidden_ParityCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ShardConfig) SetCodeMatrixConfig(v *CodeMatrixConfig) {
	x.xxx_hidden_CodeMatrixConfig = v
}

func (x *ShardConfig) HasBlockSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ShardConfig) HasCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ShardConfig) HasParityCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ShardConfig) HasCodeMatrixConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CodeMatrixConfig != nil
}

func (x *ShardConfig) ClearBlockSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BlockSize = 0
}

func (x *ShardConfig) ClearCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Count = 0
}

func (x *ShardConfig) ClearParityCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ParityCount = 0
}

func (x *ShardConfig) ClearCodeMatrixConfig() {
	x.xxx_hidden_CodeMatrixConfig = nil
}

type ShardConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	BlockSize        *uint64
	Count            *uint64
	ParityCount      *uint64
	CodeMatrixConfig *CodeMatrixConfig
}

func (b0 ShardConfig_builder) Build() *ShardConfig {
	m0 := &ShardConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BlockSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_BlockSize = *b.BlockSize
	}
	if b.Count != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Count = *b.Count
	}
	if b.ParityCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ParityCount = *b.ParityCount
	}
	x.xxx_hidden_CodeMatrixConfig = b.CodeMatrixConfig
	return m0
}

type CodeMatrixConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Kind        *string                `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CodeMatrixConfig) Reset() {
	*x = CodeMatrixConfig{}
	mi := &file_parity_v0_Packet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeMatrixConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeMatrixConfig) ProtoMessage() {}

func (x *CodeMatrixConfig) ProtoReflect() protoreflect.Message {
	mi := &file_parity_v0_Packet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CodeMatrixConfig) GetKind() string {
	if x != nil {
		if x.xxx_hidden_Kind != nil {
			return *x.xxx_hidden_Kind
		}
		return ""
	}
	return ""
}

func (x *CodeMatrixConfig) SetKind(v string) {
	x.xxx_hidden_Kind = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *CodeMatrixConfig) HasKind() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CodeMatrixConfig) ClearKind() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Kind = nil
}

type CodeMatrixConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Kind *string
}

func (b0 CodeMatrixConfig_builder) Build() *CodeMatrixConfig {
	m0 := &CodeMatrixConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Kind != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Kind = b.Kind
	}
	return m0
}

type BlockSet struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Input  *[]*Block              `protobuf:"bytes,1,rep,name=input" json:"input,omitempty"`
	xxx_hidden_Parity *[]*Block              `protobuf:"bytes,2,rep,name=parity" json:"parity,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BlockSet) Reset() {
	*x = BlockSet{}
	mi := &file_parity_v0_Packet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockSet) ProtoMessage() {}

func (x *BlockSet) ProtoReflect() protoreflect.Message {
	mi := &file_parity_v0_Packet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BlockSet) GetInput() []*Block {
	if x != nil {
		if x.xxx_hidden_Input != nil {
			return *x.xxx_hidden_Input
		}
	}
	return nil
}

func (x *BlockSet) GetParity() []*Block {
	if x != nil {
		if x.xxx_hidden_Parity != nil {
			return *x.xxx_hidden_Parity
		}
	}
	return nil
}

func (x *BlockSet) SetInput(v []*Block) {
	x.xxx_hidden_Input = &v
}

func (x *BlockSet) SetParity(v []*Block) {
	x.xxx_hidden_Parity = &v
}

type BlockSet_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Input  []*Block
	Parity []*Block
}

func (b0 BlockSet_builder) Build() *BlockSet {
	m0 := &BlockSet{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Input = &b.Input
	x.xxx_hidden_Parity = &b.Parity
	return m0
}

type Block struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Hash        []byte                 `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_parity_v0_Packet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_parity_v0_Packet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Block) GetHash() []byte {
	if x != nil {
		return x.xxx_hidden_Hash
	}
	return nil
}

func (x *Block) SetHash(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Hash = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Block) HasHash() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Block) ClearHash() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Hash = nil
}

type Block_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Hash []byte
}

func (b0 Block_builder) Build() *Block {
	m0 := &Block{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Hash != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Hash = b.Hash
	}
	return m0
}

var File_parity_v0_Packet_proto protoreflect.FileDescriptor

var file_parity_v0_Packet_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x30, 0x2f, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x78, 0x6f, 0x72, 0x6b, 0x65, 0x76,
	0x69, 0x6e, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x70, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x30, 0x22, 0xe8, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x78, 0x6f, 0x72,
	0x6b, 0x65, 0x76, 0x69, 0x6e, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e,
	0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x4c,
	0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x78, 0x6f, 0x72, 0x6b, 0x65, 0x76, 0x69, 0x6e, 0x2e,
	0x62, 0x69, 0x74, 0x63, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x30, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x43, 0x0a, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x78, 0x6f, 0x72, 0x6b, 0x65, 0x76, 0x69, 0x6e, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x74, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x65,
	0x74, 0x22, 0x33, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5c,
	0x0a, 0x12, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x78, 0x6f, 0x72,
	0x6b, 0x65, 0x76, 0x69, 0x6e, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e,
	0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x61,
	0x74, 0x72, 0x69, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x63, 0x6f, 0x64, 0x65,
	0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x26, 0x0a, 0x10,
	0x43, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x65,
	0x74, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x78, 0x6f, 0x72, 0x6b, 0x65, 0x76, 0x69, 0x6e, 0x2e, 0x62, 0x69, 0x74, 0x63,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x30, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x3b, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78,
	0x6f, 0x72, 0x6b, 0x65, 0x76, 0x69, 0x6e, 0x2e, 0x62, 0x69, 0x74, 0x63, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x2e, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x06, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x22, 0x1b, 0x0a, 0x05, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x42, 0x24, 0x5a, 0x22, 0x78, 0x6f, 0x72, 0x6b, 0x65, 0x76,
	0x69, 0x6e, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x62, 0x69, 0x74, 0x63, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x2f, 0x70, 0x62, 0x2f, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x76, 0x30, 0x62, 0x08, 0x65, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
}

var file_parity_v0_Packet_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_parity_v0_Packet_proto_goTypes = []any{
	(*IndexPacket)(nil),      // 0: xorkevin.bitcensus.parity.v0.IndexPacket
	(*InputFile)(nil),        // 1: xorkevin.bitcensus.parity.v0.InputFile
	(*ShardConfig)(nil),      // 2: xorkevin.bitcensus.parity.v0.ShardConfig
	(*CodeMatrixConfig)(nil), // 3: xorkevin.bitcensus.parity.v0.CodeMatrixConfig
	(*BlockSet)(nil),         // 4: xorkevin.bitcensus.parity.v0.BlockSet
	(*Block)(nil),            // 5: xorkevin.bitcensus.parity.v0.Block
}
var file_parity_v0_Packet_proto_depIdxs = []int32{
	1, // 0: xorkevin.bitcensus.parity.v0.IndexPacket.input_file:type_name -> xorkevin.bitcensus.parity.v0.InputFile
	2, // 1: xorkevin.bitcensus.parity.v0.IndexPacket.shard_config:type_name -> xorkevin.bitcensus.parity.v0.ShardConfig
	4, // 2: xorkevin.bitcensus.parity.v0.IndexPacket.block_set:type_name -> xorkevin.bitcensus.parity.v0.BlockSet
	3, // 3: xorkevin.bitcensus.parity.v0.ShardConfig.code_matrix_config:type_name -> xorkevin.bitcensus.parity.v0.CodeMatrixConfig
	5, // 4: xorkevin.bitcensus.parity.v0.BlockSet.input:type_name -> xorkevin.bitcensus.parity.v0.Block
	5, // 5: xorkevin.bitcensus.parity.v0.BlockSet.parity:type_name -> xorkevin.bitcensus.parity.v0.Block
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_parity_v0_Packet_proto_init() }
func file_parity_v0_Packet_proto_init() {
	if File_parity_v0_Packet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_parity_v0_Packet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_parity_v0_Packet_proto_goTypes,
		DependencyIndexes: file_parity_v0_Packet_proto_depIdxs,
		MessageInfos:      file_parity_v0_Packet_proto_msgTypes,
	}.Build()
	File_parity_v0_Packet_proto = out.File
	file_parity_v0_Packet_proto_rawDesc = nil
	file_parity_v0_Packet_proto_goTypes = nil
	file_parity_v0_Packet_proto_depIdxs = nil
}
